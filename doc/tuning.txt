python model.py --step=1 --action=tuning --estimator=sklearn.ensemble.AdaBoostClassifier && 
python model.py --step=1 --action=tuning --estimator=sklearn.ensemble.BaggingClassifier && 
python model.py --step=1 --action=tuning --estimator=imblearn.ensemble.BalancedBaggingClassifier && 
python model.py --step=1 --action=tuning --estimator=sklearn.ensemble.GradientBoostingClassifier && 
python model.py --step=1 --action=tuning --estimator=imblearn.ensemble.BalancedRandomForestClassifier && 
python model.py --step=1 --action=tuning --estimator=sklearn.ensemble.RandomForestClassifier && 
python model.py --step=1 --action=tuning --estimator=imblearn.ensemble.RUSBoostClassifier && 
python model.py --step=1 --action=tuning --estimator=xgboost.XGBClassifier && 

python model.py --step=2 --action=tuning --estimator=sklearn.ensemble.AdaBoostClassifier && 
python model.py --step=2 --action=tuning --estimator=sklearn.ensemble.BaggingClassifier && 
python model.py --step=2 --action=tuning --estimator=imblearn.ensemble.BalancedBaggingClassifier && 
python model.py --step=2 --action=tuning --estimator=sklearn.ensemble.GradientBoostingClassifier && 
python model.py --step=2 --action=tuning --estimator=imblearn.ensemble.BalancedRandomForestClassifier && 
python model.py --step=2 --action=tuning --estimator=sklearn.ensemble.RandomForestClassifier && 
python model.py --step=2 --action=tuning --estimator=imblearn.ensemble.RUSBoostClassifier && 
python model.py --step=2 --action=tuning --estimator=xgboost.XGBClassifier && 

python model.py --step=3 --action=tuning --estimator=sklearn.ensemble.AdaBoostRegressor && 
python model.py --step=3 --action=tuning --estimator=sklearn.ensemble.BaggingRegressor && 
python model.py --step=3 --action=tuning --estimator=sklearn.ensemble.GradientBoostingRegressor && 
python model.py --step=3 --action=tuning --estimator=sklearn.ensemble.RandomForestRegressor && 
python model.py --step=3 --action=tuning --estimator=xgboost.XGBRegressor
